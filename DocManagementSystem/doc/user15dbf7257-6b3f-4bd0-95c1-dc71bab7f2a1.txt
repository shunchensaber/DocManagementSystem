import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class Manager extends Worker {

	private List<Worker> worker;

	public Manager() {
		
		worker  = new ArrayList<Worker>();

	}
	//Manager类的初始 ?
	public Manager(String name, int age, int salary, String department) {

		Worker tempwork = new Worker(name,age,salary,department);
		worker  = new ArrayList<Worker>();
		this.worker.add(tempwork);
	}

	// 管理人员可以查询本部门员工的基本信息，跨部门查询提示权限不足，提示 ? Access Denied! ?
	public String inquire(Worker e) {
		if(!e.getDepartment().equals(this.getDepartment()))
			return "Access Denied!";
		else
		{
			return e.show();
		}
		
		
	}

	// 管理人员给自己的队伍添加工作人员，同 ?部门的工作人员可以添加，并返回true，不同部门的工作人员无法添加，返回false
	public boolean lead(Worker e) {
		if(!e.getDepartment().equals(this.getDepartment()))
			return false;
		else
		{
			this.worker.add(e);
			return true;
		}
	}

	// 打印自己队伍的人员姓名，没有打印“Empty ?
	public String print() {
		if(worker.size()==0)
			return "Empty";
		Iterator<Worker> it = worker.iterator();
		String temp  ="";
		while(it.hasNext())
		{
			
			temp+=it.next().show();
		
		}
		return temp;
	}

}

